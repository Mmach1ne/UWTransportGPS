{
  "name": "@transport/geofence-alerts",
  "version": "0.1.0",
  "private": true,
  "description": "Real-time geofence monitoring and alerting service for transport GPS tracking",
  "main": "dist/main.js",
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "dev": "nodemon src/main.ts",
    "start": "node dist/main.js",
    "start:prod": "NODE_ENV=production node dist/main.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:api": "ts-node scripts/test-alerts.ts",
    "lint": "eslint src/**/*.ts --fix",
    "lint:check": "eslint src/**/*.ts",
    "format": "prettier --write src/**/*.ts",
    "format:check": "prettier --check src/**/*.ts",
    "setup:sample-data": "ts-node scripts/setup-sample-geofences.ts",
    "docker:build": "docker build -t geofence-alerts .",
    "docker:run": "docker run -p 3001:3001 --env-file .env geofence-alerts",
    "clean": "rimraf dist coverage",
    "typecheck": "tsc --noEmit",
    "validate": "npm run typecheck && npm run lint:check && npm run format:check"
  },
  "dependencies": {
    "aws-sdk": "^2.1491.0",
    "axios": "^1.6.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "node-cron": "^3.0.2",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.10.0",
    "@types/uuid": "^9.0.7",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.3.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testMatch": [
      "**/__tests__/**/*.test.ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/main.ts"
    ]
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts,json",
    "ignore": [
      "src/**/*.test.ts"
    ],
    "exec": "ts-node src/main.ts"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
